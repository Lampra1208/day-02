git 에서 저장하는 방식
  임시저장(stage 에 올린다.) 후 저장

stage 에 변경사항을 올리는 방법
  git add 파일이름

day-02 폴더는 git repository
  day-02.txt 파일은 새롭게 만든 파일
  (untracked 된 상태, unstaged 된 상태)

git add day-02.txt 
  -->day-02.txt 가 stage에 올라갔고,(staged 상태)
      변경사항을 추적할 수 있는 상태(tracked 상태)

day-02.txt 를 수정
  day-02.txt 가 modified 상태가 되었다. 
  (tracked 상태, unstaged 상태)

day-02.txt 수정사항을 stage에 올림
  git add day-02.txt

영구저장
  stage에 올라가 있는 임시저장된 파일들만 영구저장이 된다.
  git commit
  i 를 누르면 저장파일에 메세지를 남길 수 있다.
  메세지를 남기고 난 후 esc 버튼을 누르고, :wq 를 누르면 저장이 된다.

  git status
   현재 파일의 상태를 알수있다.

  git restore --staged 파일이름
    stage 에 올라간 파일을 stage에서 내릴수 있다.
    
  git restore 파일이름
    unstaged 상태에서 쓰면 마지막으로 저장한 지점으로 돌아간다.
  


무조건 처음 새롭게 만들어진 파일은 untracked
한번이라도 stage에 올라갔고, commit이 되었다면 tracked

commit을 할때는 staged 된 파일만 커밋됨

stage에 한번에 모든 파일 올리기
  git add .

커밋 하면서 메시지를 동시에 작성하는 옵션
  -m 옵션
  
  git commit -m '메시지'

커밋 하면서 add 하는 옵션
  -a 옵션
  git commit -a

단, 파일이 tracked 상태일때만 가능
--> untracked 라면 사용불가
--> 새롭게 만들어진 파일이라면 사용불가

두가지 동시에
  -am
  git commit -am '메시지'

git commit 을 실행하면 메시지 입력 에디터가 뜬다.
이때 에디터에 글씨를 쓸수있도록
i
를 클릭하여 INSERT 모드 (끼워넣기) 모드로 만들어서
커밋 메시지를 작성 한 후에
더이상 쓸 메시지가 없다면
esc 를 클릭하여 끼워 넣기 모드를 종료하고
:wq 
를 입력하여 에디터를 종료한다.



브랜치

기능별로 혹은 파일별로 수정사항을 저장할 수 있도록 도와주는 장치

기본적으로 브랜치를 만들면
master(main) 브랜치가 만들어진다

git repository 에 존재하는 브랜치 목록 환인
  git branch


브랜치 만들기
  git branch '브랜치 이름'

브랜치 병합하기
 git merge 브랜치이름

 현재 내가 위치한 공간에서 해당브랜치를 내쪽으로 병합
 이때 다른줄이 수정 되어있으면 이상없이 병합하고
 같은줄이 수정되어있으면 직접 어떤 코드를 설정할지
 작성해준 후 직업 add, commit 해준다.

 브랜치 삭제하기
  git branch -d 브랜치이름

브랜치 이름 바꾸기
  git branch -m 브랜치이름

github
  연결
    git remote add orgin 주소

  업로드
    git pusy orgin 브랜치이름

  -u 옵션
    로컬 레포지토리 브랜치와 
    원격 레포지토리 브랜치를 연결하는 옵션
    최초 1회 설정하면
    그 이후는 알아서 연결된 원격저장소에 
    업로드, 다운로드 가 된다.
    git push -u origin main
    이후에는
    git push 만으로 업로드 가능